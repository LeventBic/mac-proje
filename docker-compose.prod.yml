version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: inflow_mysql_prod
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: inflow_db
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data_prod:/var/lib/mysql
      - ./database/schema_mysql.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./database/seed_mysql.sql:/docker-entrypoint-initdb.d/02-seed.sql
    networks:
      - inflow_network_prod
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
    container_name: inflow_backend_prod
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3001
      DB_HOST: mysql
      DB_PORT: 3306
      DB_NAME: inflow_db
      DB_USER: ${MYSQL_USER}
      DB_PASSWORD: ${MYSQL_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: 24h
      JWT_REFRESH_EXPIRES_IN: 7d
      CORS_ORIGIN: ${FRONTEND_URL}
      RATE_LIMIT_WINDOW_MS: 900000
      RATE_LIMIT_MAX: 100
      LOG_LEVEL: warn
    ports:
      - "3001:3001"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - inflow_network_prod
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Frontend React App (Production Build)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: inflow_frontend_prod
    restart: unless-stopped
    environment:
      REACT_APP_API_URL: ${BACKEND_URL}/api
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - inflow_network_prod

volumes:
  mysql_data_prod:

networks:
  inflow_network_prod:
    driver: bridge 